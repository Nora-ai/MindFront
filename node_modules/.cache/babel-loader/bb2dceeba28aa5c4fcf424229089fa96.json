{"ast":null,"code":"var _jsxFileName = \"/Users/snora/Documents/GA_SEI/P4/MindFront/mindfront/src/components/ShowComments/ShowComments.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './ShowComments.css'; //import { readAllComments } from '../../services/comments'\n\nimport { readOnePost } from '../../services/posts';\nimport AddComment from './../AddComment/AddComment';\nexport default function ShowComments(props) {\n  const postId = props.match.params.id;\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    showComments();\n  }, []);\n\n  const showComments = async () => {\n    const post = await readOnePost(postId);\n    setPost(post);\n    setComments(post.comments);\n  };\n\n  console.log(post);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, post && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"show-all-comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, post.subject), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, post.content), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, post.img_url), comments.map(comment => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, comment.content))), /*#__PURE__*/React.createElement(AddComment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/snora/Documents/GA_SEI/P4/MindFront/mindfront/src/components/ShowComments/ShowComments.jsx"],"names":["React","useState","useEffect","readOnePost","AddComment","ShowComments","props","postId","match","params","id","post","setPost","comments","setComments","showComments","console","log","subject","content","img_url","map","comment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,oBAAP,C,CACA;;AACC,SAASC,WAAT,QAA4B,sBAA5B;AACD,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,eAAe,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAEzC,QAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,YAAY,GAAG,YAAY;AAC7B,UAAMJ,IAAI,GAAG,MAAMR,WAAW,CAACI,MAAD,CAA9B;AACAK,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,WAAW,CAACH,IAAI,CAACE,QAAN,CAAX;AACH,GAJD;;AAMAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEA,sBAAQ,0CAENA,IAAI,iBACF;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACO,OAAT,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,IAAI,CAACQ,OAAT,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,IAAI,CAACS,OAAT,CAHJ,EAKKP,QAAQ,CAACQ,GAAT,CAAcC,OAAD,iBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,OAAO,CAACH,OAAZ,CADH,CALL,CAHI,eAeL,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfK,CAAR;AAmBH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './ShowComments.css'\n//import { readAllComments } from '../../services/comments'\n import { readOnePost } from '../../services/posts'\nimport AddComment from './../AddComment/AddComment'\n\nexport default function ShowComments (props) {\n  \n    const postId = props.match.params.id\n   \n    const [post, setPost] = useState(null)\n    const [comments, setComments] = useState([])\n\n    useEffect(() => {\n        showComments()\n    }, [])\n\n    const showComments = async () => {\n        const post = await readOnePost(postId)\n        setPost(post)\n        setComments(post.comments)\n    }\n\n    console.log(post)\n\n    return (<>\n\n    { post && \n        <div className=\"show-all-comments\">\n            <p>{post.subject}</p>\n            <p>{post.content}</p>\n            <p>{post.img_url}</p>\n\n            {comments.map((comment) => (\n                <p>{comment.content}</p>\n            ))}\n\n        </div>\n    }\n\n       <AddComment />\n    </>)\n \n    \n}\n\n\n  "]},"metadata":{},"sourceType":"module"}