{"ast":null,"code":"var _jsxFileName = \"/Users/snora/Documents/GA_SEI/P4/MindFront/mindfront/src/components/AddComment/AddComment.jsx\";\nimport React, { useState } from 'react';\nimport './AddComment.css';\nimport { postComment } from '../../services/comments';\nexport default function AddComment(props) {\n  const postId = props.match.params.id;\n  const [formData, setFormData] = useState({\n    content: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newComment = await postComment(postId, formData);\n    props.setComments([...props.comments, newComment]);\n    setFormData({\n      content: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"add-comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"add-comment-input\",\n    name: \"content\",\n    type: \"text\",\n    value: formData.content,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-comment-add-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Add Comment\")));\n}","map":{"version":3,"sources":["/Users/snora/Documents/GA_SEI/P4/MindFront/mindfront/src/components/AddComment/AddComment.jsx"],"names":["React","useState","postComment","AddComment","props","postId","match","params","id","formData","setFormData","content","handleChange","e","name","value","target","handleSubmit","preventDefault","newComment","setComments","comments"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,eAAe,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAEvC,QAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC;AAED,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAE;AACrCU,IAAAA,OAAO,EAAE;AAD4B,GAAF,CAAxC;;AAIC,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAN,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACK,IAAD,GAAQC;AAAvB,KAAD,CAAX;AACH,GAHD;;AAKA,QAAME,YAAY,GAAG,MAAOJ,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMC,UAAU,GAAG,MAAMjB,WAAW,CAACG,MAAD,EAASI,QAAT,CAApC;AACAL,IAAAA,KAAK,CAACgB,WAAN,CAAkB,CACd,GAAGhB,KAAK,CAACiB,QADK,EAEdF,UAFc,CAAlB;AAIAT,IAAAA,WAAW,CAAC;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAD,CAAX;AACH,GARD;;AAWA,sBAAQ,uDACJ;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AACA,IAAA,SAAS,EAAC,aADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,mBADd;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAER,QAAQ,CAACE,OAJpB;AAKI,IAAA,QAAQ,EAAEC,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAWI;AAAQ,IAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXJ,CADI,CAAR;AAkBH","sourcesContent":["import React, { useState } from 'react'\nimport './AddComment.css'\nimport { postComment } from '../../services/comments'\n\nexport default function AddComment (props) {\n\n    const postId = props.match.params.id\n\n   const [formData, setFormData] = useState ({\n        content: \"\"\n    })\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setFormData({ ...formData, [name]: value })\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const newComment = await postComment(postId, formData)\n        props.setComments([\n            ...props.comments,\n            newComment\n        ])\n        setFormData({content: \"\"})\n    }\n\n\n    return (<>\n        <form onSubmit={handleSubmit}\n        className=\"add-comment\">\n            <label>\n                <input\n                    className=\"add-comment-input\"\n                    name=\"content\"\n                    type=\"text\"\n                    value={formData.content}\n                    onChange={handleChange}\n                />\n            </label>\n            <button className=\"add-comment-add-button\">Add Comment</button>\n        </form>\n        \n        \n\n    </>)\n}\n\n"]},"metadata":{},"sourceType":"module"}