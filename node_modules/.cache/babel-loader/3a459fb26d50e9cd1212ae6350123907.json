{"ast":null,"code":"var _jsxFileName = \"/Users/snora/Documents/GA_SEI/P4/MindFront/mindfront/src/components/EditOnePost/EditOnePost.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './EditOnePost.css';\nimport { putPost } from '../../services/posts';\nexport default function EditOnePost(props) {\n  const [formData, setFormData] = useState({\n    subject: \"\",\n    content: \"\",\n    img_url: \"\"\n  });\n  useEffect(() => {\n    defaultFormData();\n  }, [props.posts]);\n\n  const defaultFormData = () => {\n    const currentPost = props.posts.find(post => {\n      return post.id === parseInt(props.match.params.id);\n    });\n\n    if (currentPost) {\n      setFormData({\n        subject: currentPost.subject,\n        content: currentPost.content\n      });\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      id\n    } = props.match.params;\n    const newPost = await putPost(id, formData);\n    props.setPosts(props.posts.map(currentPost => {\n      return currentPost.id === parseInt(id) ? newPost : currentPost;\n    }));\n    props.history.push('/my-posts');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"edit-one-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Edit Post\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"edit-label-subject\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"subject\", /*#__PURE__*/React.createElement(\"input\", {\n    className: \"edit-one-subject\",\n    type: \"text\",\n    name: \"subject\",\n    value: formData.subject,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"edit-label-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"content\", /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"edit-one-content\",\n    type: \"text\",\n    name: \"content\",\n    value: formData.content,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"edit-label-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"image\", /*#__PURE__*/React.createElement(\"input\", {\n    className: \"edit-one-image\",\n    type: \"text\",\n    name: \"img_url\",\n    value: formData.img_url,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit-one-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"submit\")));\n}","map":{"version":3,"sources":["/Users/snora/Documents/GA_SEI/P4/MindFront/mindfront/src/components/EditOnePost/EditOnePost.jsx"],"names":["React","useState","useEffect","putPost","EditOnePost","props","formData","setFormData","subject","content","img_url","defaultFormData","posts","currentPost","find","post","id","parseInt","match","params","handleChange","e","name","value","target","handleSubmit","preventDefault","newPost","setPosts","map","history","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './EditOnePost.css'\nimport { putPost } from '../../services/posts'\n\nexport default function EditOnePost (props) {\n\n\nconst [formData, setFormData] = useState({\n    subject: \"\",\n    content: \"\",\n    img_url: \"\"\n})\n\nuseEffect(() => {\n    defaultFormData()\n}, [props.posts])\n\nconst defaultFormData = () => {\n    const currentPost = props.posts.find((post) => {\n        return post.id === parseInt(props.match.params.id)\n    })\n\n    if (currentPost) {\n        setFormData({ subject: currentPost.subject, content: currentPost.content })\n    }\n}\n\nconst handleChange = (e) => {\n    const { name, value } = e.target\n    setFormData({ ...formData, [name]: value })\n}\n\nconst handleSubmit = async (e) => {\n    e.preventDefault()\n    const { id } = props.match.params\n    const newPost = await putPost(id, formData)\n    props.setPosts(\n        props.posts.map((currentPost) => {\n            return currentPost.id === parseInt(id) ? newPost : currentPost\n        })\n    )\n    props.history.push('/my-posts')\n}\n\n    return (<>\n\n        <form className=\"edit-one-form\" onSubmit={handleSubmit}>\n            <h3>Edit Post</h3>\n            <label className=\"edit-label-subject\">\n                subject\n                <input\n                    className=\"edit-one-subject\"\n                    type=\"text\"\n                    name=\"subject\"\n                    value={formData.subject}\n                    onChange={handleChange}\n                />\n            </label>\n            <label className=\"edit-label-content\">\n                content\n                <textarea\n                    className=\"edit-one-content\"\n                    type=\"text\"\n                    name=\"content\"\n                    value={formData.content}\n                    onChange={handleChange}\n                />\n            </label>\n            <label className='edit-label-image'>\n                image\n                <input\n                    className=\"edit-one-image\"\n                    type=\"text\"\n                    name=\"img_url\"\n                    value={formData.img_url}\n                    onChange={handleChange}\n                />\n            </label>\n            <button className=\"edit-one-submit\">submit</button>\n        </form>\n\n\n\n    </>)\n\n}"]},"metadata":{},"sourceType":"module"}