{"ast":null,"code":"var _jsxFileName = \"/Users/snora/Documents/GA_SEI/P4/MindFront/mindfront/src/components/AddComment/AddComment.jsx\";\nimport React, { useState } from 'react';\nimport './AddComment.css';\nimport { postComment } from '../../services/comments';\nexport default function AddComment(props) {\n  const [formData, setFormData] = useState({\n    content: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newComment = await postComment(formData);\n    props.setComments([...props.comments, newComment]);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"add-comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"content\",\n    type: \"text\",\n    value: formData.content,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Add\")));\n}","map":{"version":3,"sources":["/Users/snora/Documents/GA_SEI/P4/MindFront/mindfront/src/components/AddComment/AddComment.jsx"],"names":["React","useState","postComment","AddComment","props","formData","setFormData","content","handleChange","e","name","value","target","handleSubmit","preventDefault","newComment","setComments","comments"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,eAAe,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAExC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAE;AACrCM,IAAAA,OAAO,EAAE;AAD4B,GAAF,CAAxC;;AAIC,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAN,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACK,IAAD,GAAQC;AAAvB,KAAD,CAAX;AACH,GAHD;;AAKA,QAAME,YAAY,GAAG,MAAOJ,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMC,UAAU,GAAG,MAAMb,WAAW,CAACG,QAAD,CAApC;AACAD,IAAAA,KAAK,CAACY,WAAN,CAAkB,CACd,GAAGZ,KAAK,CAACa,QADK,EAEdF,UAFc,CAAlB;AAIH,GAPD;;AAUA,sBAAQ,uDACJ;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AACA,IAAA,SAAS,EAAC,aADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAER,QAAQ,CAACE,OAHpB;AAII,IAAA,QAAQ,EAAEC,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAVJ,CADI,CAAR;AAiBH","sourcesContent":["import React, { useState } from 'react'\nimport './AddComment.css'\nimport { postComment } from '../../services/comments'\n\nexport default function AddComment (props) {\n\n   const [formData, setFormData] = useState ({\n        content: \"\"\n    })\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setFormData({ ...formData, [name]: value })\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const newComment = await postComment(formData)\n        props.setComments([\n            ...props.comments,\n            newComment\n        ])\n    }\n\n\n    return (<>\n        <form onSubmit={handleSubmit}\n        className=\"add-comment\">\n            <label>\n                <input\n                    name=\"content\"\n                    type=\"text\"\n                    value={formData.content}\n                    onChange={handleChange}\n                />\n            </label>\n            <button>Add</button>\n        </form>\n        \n        \n\n    </>)\n}\n\n"]},"metadata":{},"sourceType":"module"}